1.Crie um código em C para escrever "Ola mundo!" em um arquivo chamado 'ola_mundo.txt'.
		
		//echo "ola mundo" < ola_mundo.txt

2.Crie um código em C que pergunta ao usuário seu nome e sua idade, e escreve este conteúdo em um arquivo com o seu nome e extensão '.txt'. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_1':

$ ./ola_usuario_1
$ Digite o seu nome: Eu
$ Digite a sua idade: 30
$ cat Eu.txt
$ Nome: Eu
$ Idade: 30 anos

//touch ola_usuario_1
	
	#include <stdio.h>
	#include <string.h>
	#include <stdlib.h>

	int main(void)
	{
		char string[80], nome[30], idade[4];
		int i=0;
		FILE *p;
		printf("Qual seu nome\n");
		scanf("%s", nome);
		printf("Qual sua idade\n");
		scanf("%s", idade);

		//criar arquivo
		sprintf(string, "%s.txt", nome); 
	
		if (!(p = fopen(string,"w"))) 	//para erro na abertura do arquivo..*/
		{ 				//o programa para automaticamente
		printf("Erro! Impossivel abrir o arquivo!\n");
		exit(1);
		}
	
	//escreve no arquivo	
	fprintf(p, "Nome: %s\n", nome);
	fprintf(p, "Idade: %s anos.\n", idade);
	
	return 0;
	}


3.Crie um código em C que recebe o nome do usuário e e sua idade como argumentos de entrada (usando as variáveis argc e *argv[]), e escreve este conteúdo em um arquivo com o seu nome e extensão '.txt'. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_2':
$ ./ola_usuario_2 Eu 30
$ cat Eu.txt
$ Nome: Eu
$ Idade: 30 anos

//arquivo ola_usuario_2

	#include <stdio.h>
	#include <stdlib.h>

	int main(int argc, char* argv[])
	{
    	int i=0;
    	char string[10];
		FILE *p;

		//criar o nome do arquivo
		sprintf(string, "%s.txt", argv[1]); //junta os nomes do arquivo
	
	
		if (!(p = fopen(string,"w")))	//para erro na abertura do arquivo..*/
		{ 				//o programa para automaticamente 
		printf("Erro! Impossivel abrir o arquivo!\n");
		exit(1);
		}

	// escreve no arquivo
	fprintf(p, "Nome: %s\n", argv[1]); 
	fprintf(p, "Idade: %s anos.\n", argv[2]);  
	    
return 0;   
} 

4.Crie uma função que retorna o tamanho de um arquivo, usando o seguinte protótipo:
 	int tam_arq_texto(char *nome_arquivo);
Salve esta função em um arquivo separado chamado 'bib_arqs.c'.
Salve o protótipo em um arquivo chamado 'bib_arqs.h'. 
Compile 'bib_arqs.c' para gerar o objeto 'bib_arqs.o'.

//touch bib_arqs.c

	#include <stdio.h>
	#include <stdlib.h>
	#include "bib_arqs.h"

	int main(void)
	{
    	int i=0;
    	char string[80], *nome_arquivo;
		FILE *p;
	
		printf("digite o nome completo do arquivo\n");
		scanf("%s", string);
		
		p = fopen(string,"r");
		if(p == NULL){
		printf("ERRO ao tentar abrir %s\n");
		exit (1);
		}
		printf("ok");
		tam_arq_texto(string);
	    
	return 0;   

	}

//touch bib_arqs.h

	#include <stdio.h>

	int tam_arq_texto(char *nome_arquivo)
	{
		int t=0;
		FILE *p;
	
		p = fopen(nome_arquivo,"r");
		fseek (p, 0, SEEK_END);
		t = ftell (p);
		fclose(p);

		printf("\tTamanho do arquivo= %i\n", t);
	
	return 0;
	}

5.Crie uma função que lê o conteúdo de um arquivo-texto e o guarda em uma string, usando o seguinte protótipo: char* le_arq_texto(char *nome_arquivo); Repare que o conteúdo do arquivo é armazenado em um vetor interno à função, e o endereço do vetor é retornado ao final. (Se você alocar este vetor dinamicamente, lembre-se de liberar a memória dele quando acabar o seu uso.) Salve esta função no mesmo arquivo da questão 4, chamado 'bib_arqs.c'. Salve o protótipo no arquivo 'bib_arqs.h'. Compile 'bib_arqs.c' novamente para gerar o objeto 'bib_arqs.o'.

6.Crie um código em C que copia a funcionalidade básica do comando cat: escrever o conteúdo de um arquivo-texto no terminal. Reaproveite as funções já criadas nas questões anteriores. Por exemplo, considerando que o código criado recebeu o nome de 'cat_falsificado':

$ echo Ola mundo cruel! Ola universo ingrato! > ola.txt
$ ./cat_falsificado ola.txt
$ Ola mundo cruel! Ola universo ingrato!

7.Crie um código em C que conta a ocorrência de uma palavra-chave em um arquivo-texto, e escreve o resultado no terminal. Reaproveite as funções já criadas nas questões anteriores. Por exemplo, considerando que o código criado recebeu o nome de 'busca_e_conta':
$ echo Ola mundo cruel! Ola universo ingrato! > ola.txt
$ ./busca_e_conta Ola ola.txt
$ 'Ola' ocorre 2 vezes no arquivo 'ola.txt'.